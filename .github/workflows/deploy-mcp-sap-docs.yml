name: Deploy MCP stack

on:
  push:
    branches: [ main ]

  # Allow manual triggering
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-22.04
    # ðŸ‘‡ must match the environment where you stored the secrets
    environment:
      name: remove server

    steps:
      - name: Check out repo (for action context only)
        uses: actions/checkout@v4

      - name: Preflight verify required secrets are present
        run: |
          set -euo pipefail
          for s in SERVER_IP SERVER_USERNAME SSH_PRIVATE_KEY; do
            [ -n "${!s}" ] || { echo "Missing $s"; exit 1; }
          done
        env:
          SERVER_IP: ${{ secrets.SERVER_IP }}
          SERVER_USERNAME: ${{ secrets.SERVER_USERNAME }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy to server via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            set -Eeuo pipefail

            echo "==> Ensure base path exists and owned by user"
            sudo mkdir -p /opt/mcp-sap
            sudo chown -R "$USER":"$USER" /opt/mcp-sap

            echo "==> Clone or update repo (with submodules)"
            if [ -d /opt/mcp-sap/mcp-sap-docs/.git ]; then
              cd /opt/mcp-sap/mcp-sap-docs
              git config --global url."https://github.com/".insteadOf git@github.com:
              git fetch --prune
              git reset --hard origin/main
              git submodule update --init --recursive --remote --depth 1
            else
              cd /opt/mcp-sap
              git config --global url."https://github.com/".insteadOf git@github.com:
              git clone --recursive --depth 1 https://github.com/marianfoo/mcp-sap-docs.git
              cd mcp-sap-docs
              git submodule update --init --recursive --remote --depth 1
            fi

            echo "==> Build everything (TypeScript + indexes)"
            npm ci
            npm run build

            echo "==> (Re)start PM2 processes"
            # Proxy (SSE) on 127.0.0.1:18080; HTTP status on 127.0.0.1:3001; Streamable HTTP on 127.0.0.1:3122
            pm2 start /opt/mcp-sap/mcp-sap-docs/ecosystem.config.cjs --only mcp-sap-proxy      || pm2 restart mcp-sap-proxy
            pm2 start /opt/mcp-sap/mcp-sap-docs/ecosystem.config.cjs --only mcp-sap-http       || pm2 restart mcp-sap-http
            pm2 start /opt/mcp-sap/mcp-sap-docs/ecosystem.config.cjs --only mcp-sap-streamable || pm2 restart mcp-sap-streamable
            pm2 save

            echo "==> Health checks"
            for i in $(seq 1 30); do curl -fsS http://127.0.0.1:18080/status >/dev/null && break || sleep 2; done
            curl -fsS http://127.0.0.1:18080/status
            for i in $(seq 1 30); do curl -fsS http://127.0.0.1:3001/status  >/dev/null && break || sleep 2; done
            curl -fsS http://127.0.0.1:3001/status
            # Streamable HTTP server health on 127.0.0.1:3122
            for i in $(seq 1 30); do curl -fsS http://127.0.0.1:3122/health  >/dev/null && break || sleep 2; done
            curl -fsS http://127.0.0.1:3122/health